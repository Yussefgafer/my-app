name: Android CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  ANDROID_HOME: ${{ github.workspace }}/android-sdk
  ANDROID_SDK_ROOT: ${{ github.workspace }}/android-sdk
  
jobs:
  build:
    name: Build and Test
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: 'gradle'
    
    - name: Setup Android SDK
      uses: android-actions/setup-android@v3
      with:
        log-accepted-android-sdk-licenses: true
    
    - name: Set up Android SDK
      uses: android-actions/setup-android-sdk@v1.1.0
      with:
        sdk-packages: |
          platform-tools
          platforms;android-34
          build-tools;34.0.0
          extras;android;m2repository
          extras;google;m2repository
          extras;google;google_play_services
          system-images;android-34;google_apis_playstore;x86_64
    
    - name: Accept Android Licenses
      run: |
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses --sdk_root=$ANDROID_HOME || true
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update
        
        # Create licenses directory if it doesn't exist
        mkdir -p "$ANDROID_HOME/licenses"
        
        # Accept all licenses
        echo -e "\n24333f8a63b6825ea9c5514f83c2829b004d1fee" > "$ANDROID_HOME/licenses/android-sdk-license"
        echo -e "d56f5187479451eabf01fb78af6dfcb131a6481e" >> "$ANDROID_HOME/licenses/android-sdk-license"
        echo -e "8933bad161af4178b1185d1a37fbf41ea5269c55" >> "$ANDROID_HOME/licenses/android-sdk-license"
        echo -e "84831b9409646a918e30573bab4c9c91346d8abd" >> "$ANDROID_HOME/licenses/android-sdk-license"
        echo -e "601085b94cc71ea42425f5c6230a62893f4eac9d" >> "$ANDROID_HOME/licenses/android-sdk-license"
        
        # Preview license
        echo -e "84831b9409646a918e30573bab4c9c91346d8abd" > "$ANDROID_HOME/licenses/android-sdk-preview-license"
        
        # Google TV license
        echo -e "601085b94cc71ea42425f5c6230a62893f4eac9d" > "$ANDROID_HOME/licenses/android-googletv-license"
        
        # ARM EABI license
        echo -e "d975f751698a77b662f9334dbea2b1e4a3f6a4a8" > "$ANDROID_HOME/licenses/android-sdk-arm-dbt-license"
        
        # Verify licenses
        echo "License files created:"
        ls -la "$ANDROID_HOME/licenses/"
        echo "\nLicense contents:"
        cat "$ANDROID_HOME/licenses/"*
        
    - name: Install Android SDK components
      run: |
        # Update SDK tools
        echo "Updating SDK tools..."
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --update
        
        # Install required components
        echo "Installing platform tools..."
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platform-tools"
        
        echo "Installing build tools..."
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "build-tools;34.0.0"
        
        echo "Installing platform..."
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager "platforms;android-34"
        
        # Install additional required components
        echo "Installing additional components..."
        yes | $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager \
          "extras;android;m2repository" \
          "extras;google;m2repository" \
          "extras;google;google_play_services" \
          "system-images;android-34;google_apis_playstore;x86_64"
        
        # List installed components
        echo "Installed components:"
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --list_installed
        
        # Verify licenses are accepted
        echo "Checking licenses..."
        $ANDROID_HOME/cmdline-tools/latest/bin/sdkmanager --licenses --sdk_root=$ANDROID_HOME <<< "y\ny\ny\ny\ny\n" || true
    
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: |
        ./gradlew build --stacktrace --info
      
    - name: Run tests
      run: |
        ./gradlew testDebugUnitTest
      
    - name: Assemble debug APK
      run: |
        ./gradlew assembleDebug
      
    - name: Upload APK
      uses: actions/upload-artifact@v3
      if: success()
      with:
        name: app-debug
        path: app/build/outputs/apk/debug/app-debug.apk
